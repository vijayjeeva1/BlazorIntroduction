@* This @page directive with url extension is what makes a component a routable component*@
@page "/servers"

<h3>Servers</h3>

<br/>
<br/>

@* References ServerComponent which is a non-routable component 
Need to add @using BlazorIntroduction.Components.Controls to _imports.razor to not have to use entire namespace every time *@
@* <ServerComponent></ServerComponent>
<br/>
<ServerComponent></ServerComponent> *@

@*Add bootstrap container to format buttons and make them align properly when resizing the window.
	Found card component from bootstrap website - https://getbootstrap.com/docs/5.3/components/card/
*@
<div class="container-fluid text-center">
	<div class="row w-50">
		@foreach (var city in cities)
		{
			<div class="col">
				<div class="card">
					<img src="@($"/images/{city}.jpg")" class="card-img-top" alt="...">
					<div class="card-body">
						<button type="button" class="btn btn-primary">@city</button>
					</div>
				</div>
			</div>
		}
	</div>
</div>

<br/>

<ul>
	@* Use @ to use C# syntax in html section. Always need curly braces for control structures.
		You can use html elements inside the loop to repeatedly display them in a list.
	*@
	@foreach(var server in servers)
	{
		<li>
			@server.Name in @server.City is
			<span style="color:@((server.IsOnline ? "green" : "red"))">
				@(server.IsOnline ? "Online" : "Offline")
			</span>
			&nbsp; @*This is a space.*@
			@*Use route parameters to go to specific server edit page*@
			<a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>
		</li>
	}
</ul>
<p>
	<a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@code {

		private List<Server> servers = ServersRepository.GetServersByCity("Toronto");
		private List<string> cities = CitiesRepository.GetCities();
}
